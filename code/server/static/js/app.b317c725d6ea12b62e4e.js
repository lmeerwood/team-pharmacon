webpackJsonp([1], {'/t/+': function (t, e) {}, MtIG: function (t, e) {}, NHnr: function (t, e, a) { 'use strict'; Object.defineProperty(e, '__esModule', {value: !0}); var r = a('7+uW'), s = a('Dd8w'), i = a.n(s), n = a('NYxO'), o = {computed: i()({}, Object(n.b)({authlevel: 'auth'})), methods: {logout: function () { this.$store.dispatch('logout'), this.$router.push('/') }}}, l = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-toolbar', {attrs: {fixed: ''}}, [a('v-toolbar-title', {staticClass: 'mr-4'}, [t._v('\n    Pharmacy Error Tracker\n  ')]), t._v(' '), a('v-spacer'), t._v(' '), t.authlevel !== 0 ? a('v-toolbar-items', [t.authlevel === 2 ? a('v-btn', {attrs: {to: {name: 'Main'}, flat: ''}}, [t._v('Main')]) : t._e(), t._v(' '), a('v-btn', {attrs: {to: {name: 'Error'}, flat: ''}}, [t._v('Log Error')]), t._v(' '), t.authlevel === 2 ? a('v-btn', {attrs: {to: {name: 'Physician'}, flat: ''}}, [t._v('Manage Physicians')]) : t._e(), t._v(' '), a('v-btn', {attrs: {flat: ''}, on: {click: t.logout}}, [t._v('Logout')])], 1) : t._e()], 1) }, staticRenderFns: []}; var c = {name: 'App', components: {PageHeader: a('VU/8')(o, l, !1, function (t) { a('vmfG') }, 'data-v-19d5725c', null).exports}}, u = {render: function () { var t = this.$createElement, e = this._self._c || t; return e('div', {staticClass: 'body', attrs: {id: 'app'}}, [e('v-app', {staticClass: 'blue lighten-5'}, [e('page-header'), this._v(' '), e('div', {staticClass: 'imgcontainer'}, [e('img', {attrs: {src: a('igIz'), alt: 'Avatar'}})]), this._v(' '), e('main', [e('router-view')], 1)], 1)], 1) }, staticRenderFns: []}; var v = a('VU/8')(c, u, !1, function (t) { a('MtIG') }, null, null).exports, d = a('/ocq'), m = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-layout', {staticClass: 'pt-5 top-margin', attrs: {row: ''}}, [a('v-flex', {attrs: {xs6: '', 'offset-xs3': ''}}, [a('section', {staticClass: 'page-head'}, [a('h1', {staticClass: 'display-1 primary--text', attrs: {id: 'introduction'}}, [t._v('\n        ' + t._s(t.msg) + '\n      ')]), t._v(' '), a('div', [a('p', [t._v('This page provides direct links to different sections of the app. It will be removed for production.\n        '), a('br'), a('br'), t._v('Also, none of this layout is permanent. All of it can be changed and modified to suit the end goal. This\n          was simply made to provide a starting ground.')])])]), t._v(' '), a('section', [a('v-btn', {attrs: {to: {name: 'Login'}, flat: ''}}, [t._v('\n        Login Page\n      ')]), t._v(' '), a('v-btn', {attrs: {to: {name: 'Error'}, flat: ''}}, [t._v('\n        Error Page\n      ')])], 1), t._v(' '), a('h2', {staticClass: 'headline primary--text pt-4'}, [t._v('Useful Links')]), t._v(' '), a('section', [a('v-card', [a('v-container', {staticStyle: {'min-height': '0'}, attrs: {fluid: '', 'grid-list-lg': ''}}, [a('v-layout', {attrs: {row: '', wrap: ''}}, [a('v-flex', {attrs: {xs12: ''}}, [a('v-card', {staticClass: 'white--text', attrs: {color: 'blue-grey darken-2'}}, [a('v-card-title', {attrs: {'primary-title': ''}}, [a('div', {staticClass: 'headline'}, [t._v('Vuetify Documentation')]), t._v(' '), a('div', [t._v('Vuetify.js is what enables us to easily apply a Material Theme design. The documentation for it\n                   is quite good. Go here to see all the different widgets they have for use.')])]), t._v(' '), a('v-card-actions', [a('a', {attrs: {href: 'https://vuetifyjs.com/en/getting-started/quick-start', target: '_blank'}}, [a('v-btn', {attrs: {flat: '', dark: ''}}, [t._v('Show me teh Docs!')])], 1)])], 1)], 1), t._v(' '), a('v-flex', {attrs: {xs12: ''}}, [a('v-card', {staticClass: 'white--text', attrs: {color: 'blue-grey darken-2'}}, [a('v-card-title', {attrs: {'primary-title': ''}}, [a('div', {staticClass: 'headline'}, [t._v('YouTube Tutorial')]), t._v(' '), a('div', [t._v("This is a very long but in-depth series on how the entire stack will work together. It's what\n                   I'm using to learn all this.")])]), t._v(' '), a('v-card-actions', [a('a', {attrs: {href: 'https://www.youtube.com/watch?v=Fa4cRMaTDUI&list=PLWKjhJtqVAbnadueQ-C5keMQQiQau_i0D', target: '_blank'}}, [a('v-btn', {attrs: {flat: '', dark: ''}}, [t._v('Video Tutorial')])], 1)])], 1)], 1)], 1)], 1)], 1)], 1)])], 1) }, staticRenderFns: []}; var f = a('VU/8')({name: 'HelloWorld', data: function () { return {msg: 'Pharmacy Error Tracker Debug Page'} }}, m, !1, function (t) { a('VH1H') }, 'data-v-98766a70', null).exports, p = a('Xxa5'), h = a.n(p), x = a('exGp'), y = a.n(x), g = a('mtWM'), b = a.n(g), _ = a('424j'); r.a.use(n.a); var w = new n.a.Store({strict: !0, plugins: [Object(_.a)()], state: {token: null, user: {authlevel: 0, email: ''}, isUserLoggedIn: !1}, mutations: {setToken: function (t, e) { t.token = e, t.isUserLoggedIn = !!e }, setUser: function (t, e) { t.user = e }, clearUser: function (t) { t.user = {authlevel: 0, email: ''} }}, actions: {setToken: function (t, e) { var a = t.commit; console.log('Setting token: ' + e), a('setToken', e) }, setUser: function (t, e) { var a = t.commit; console.log('Setting user: ' + e), a('setUser', e) }, logout: function (t) { var e = t.commit; console.log('logging out'), e('clearUser'), e('setToken', null) }}, getters: {auth: function (t) { return console.log('Someone wants the user ' + t.user.authlevel), t.user.authlevel }}}), k = function () { return b.a.create({baseURL: '/', headers: {Authorization: 'Bearer ' + w.state.token}}) }, N = function (t) { return k().post('/api/v1/query/error', t) }, P = {data: function () { return {menu: !1, msg: 'Error Form', loading: !1, patientTypes: [{text: 'Discharge', value: 'Discharge'}, {text: 'Inpatient', value: 'Inpatient'}, {text: 'Outpatient', value: 'Outpatient'}, {text: 'Day patient', value: 'Day patient'}], workers: [{text: 'Pat Smith', value: 'Pat Smith'}, {text: 'Timothy Myers', value: 'Timothy Myers'}, {text: 'Jessica Noble', value: 'Jessica Noble'}, {text: 'Amanda Stait', value: 'Amanda Stait'}, {text: 'Wang Shu', value: 'Wang Shu'}], errorTypes: [{text: 'Batch Number', value: 'Batch Number'}, {text: 'Directions', value: 'Directions'}, {text: 'Dosage / Strength', value: 'Dosage / Strength'}, {text: 'Expiry Date', value: 'Expiry Date'}, {text: 'Form Intravenous', value: 'Form Intravenous'}, {text: 'Form Per Oral', value: 'Form Per Oral'}, {text: 'Incorrect Medication', value: 'Incorrect Medication'}, {text: 'Incorrect Patient', value: 'Incorrect Patient'}, {text: 'Incorrect Quantity', value: 'Incorrect Quantity'}, {text: 'Other', value: 'Other'}], errorLocations: [{text: 'Dispensary', value: 'Dispensary'}, {text: 'On the ward', value: 'On the ward'}, {text: 'Outside hospital', value: 'Outside hospital'}], medications: [{text: '5 mg Acetaminophen USP - Oral', value: '5 mg Acetaminophen USP - Oral'}, {text: '7.5 mg Acetaminophen USP - Oral', value: '7.5 mg Acetaminophen USP - Oral'}, {text: '10 mg Acetaminophen USP - Oral', value: '10 mg Acetaminophen USP - Oral'}, {text: 'Isotretinoin - Oral', value: 'Isotretinoin - Oral'}, {text: 'Ambien - Oral', value: 'Ambien - Oral'}, {text: 'Diclofenac Sodium - Oral', value: 'Diclofenac Sodium - Oral'}, {text: 'Mustargen - Intravenous', value: 'Mustargen - Intravenous'}, {text: 'Sulfamethoxazole and trimethoprim - Oral', value: 'Sulfamethoxazole and trimethoprim - Oral'}, {text: 'Sodium Fluoride - Oral', value: 'Sodium Fluoride - Oral'}, {text: 'Ceftriaxone - Intravenous', value: 'Ceftriaxone - Intravenous'}, {text: 'Claforan - Intravenous', value: 'Claforan - Intravenous'}, {text: 'Albuterol Sulfate Inhalation Solution - Inhalation', value: 'Albuterol Sulfate Inhalation Solution - Inhalation'}, {text: 'Azathioprine - Oral', value: 'Azathioprine - Oral'}, {text: 'CitraNatal Harmony 2.1 - Oral', value: 'CitraNatal Harmony 2.1 - Oral'}, {text: 'Hydrocodone Bitartrate and Acetaminophen - Oral', value: 'Hydrocodone Bitartrate and Acetaminophen - Oral'}, {text: 'Tinnitus - Oral', value: 'Tinnitus - Oral'}, {text: 'Atovaquone and Proguanil Hydrochloride - Oral', value: 'Atovaquone and Proguanil Hydrochloride - Oral'}, {text: 'Succimer - Oral', value: 'Succimer - Oral'}], severityLevels: [{text: 'Minor', value: 'Minor'}, {text: 'Low', value: 'Low'}, {text: 'Moderate-Low', value: 'Moderate-Low'}, {text: 'Moderate', value: 'Moderate'}, {text: 'Moderate-Severe', value: 'Moderate-Severe'}, {text: 'Severe', value: 'Severe'}], valid: !0, date: '', time: '', patientFirstName: '', patientSurname: '', patientId: '', patientType: '', errorType: '', errorComment: '', workerAtFault: '', workerNotified: !1, errorLocation: '', iimsCompleted: !1, medication: '', severity: '', wasPhysicianNotified: !1, physicianFirstName: '', physicianSurname: '', providerNumber: '', physicianComment: '', diagnosis: '', message: ''} }, methods: {submit: function () { var t = this; return y()(h.a.mark(function e () { var a, r, s; return h.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0:if (!t.validForm()) { e.next = 16; break } return e.prev = 1, a = t.wasPhysicianNotified.valueOf() === 'true' ? 1 : 0, r = t.iimsCompleted.valueOf() === 'true' ? 1 : 0, s = t.workerNotified.valueOf() === 'true' ? 1 : 0, e.next = 7, N({date: t.date.valueOf(), time: t.time, patientFirstName: t.patientFirstName, PatientSurname: t.patientSurname, patientId: t.patientId, patientType: t.patientType.valueOf(), errorType: t.errorType.valueOf(), errorComment: t.errorComment, workerAtFault: t.workerAtFault.valueOf(), workerNotified: s, location: t.errorLocation.valueOf(), iimsCompleted: r, medication: t.medication.valueOf(), severity: t.severity.valueOf(), physicianNotified: a, physicianFirstName: t.physicianFirstName, physicianSurname: t.physicianSurname, providerNumber: t.providerNumber, physicianComment: t.physicianComment, diagnosis: t.diagnosis}); case 7:t.clear(), t.message = 'Form submitted successfully!', e.next = 14; break; case 11:e.prev = 11, e.t0 = e.catch(1), t.message = e.t0.response.data.error; case 14:e.next = 17; break; case 16:t.message = 'There was an error with your form.'; case 17:case 'end':return e.stop() } }, e, t, [[1, 11]]) }))() }, clear: function () { this.$refs.form.reset(), this.message = '' }, validForm: function () { return this.$refs.form.validate() }}}, C = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-layout', {staticClass: 'pt-5 top-margin', attrs: {row: ''}}, [a('v-flex', {attrs: {xs6: '', 'offset-xs3': ''}}, [a('section', {staticClass: 'page-head'}, [a('h1', {staticClass: 'display-1 primary--text', attrs: {id: 'introduction'}}, [t._v('\n        ' + t._s(t.msg) + '\n      ')]), t._v(' '), a('fieldset', {staticClass: 'white'}, [a('v-form', {ref: 'form', attrs: {'lazy-validation': ''}, model: {value: t.valid, callback: function (e) { t.valid = e }, expression: 'valid'}}, [a('v-container', {attrs: {fluid: ''}}, [a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs1': ''}}, [a('v-text-field', {attrs: {label: 'Date yyyy-mm-dd', rules: [function () { return !!t.date || 'This field is required' }], required: ''}, model: {value: t.date, callback: function (e) { t.date = e }, expression: 'date'}})], 1), t._v(' '), a('v-flex', {attrs: {xs8: '', 'offset-xs1': ''}}, [a('v-text-field', {attrs: {label: 'Time hh:ss', rules: [function () { return !!t.time || 'This field is required' }], required: ''}, model: {value: t.time, callback: function (e) { t.time = e }, expression: 'time'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Patient First Name', rules: [function () { return !!t.patientFirstName || 'This field is required' }], required: ''}, model: {value: t.patientFirstName, callback: function (e) { t.patientFirstName = e }, expression: 'patientFirstName'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Patient Surname', rules: [function () { return !!t.patientSurname || 'This field is required' }], required: ''}, model: {value: t.patientSurname, callback: function (e) { t.patientSurname = e }, expression: 'patientSurname'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Patient MRN', rules: [function () { return !!t.patientId || 'This field is required' }], required: ''}, model: {value: t.patientId, callback: function (e) { t.patientId = e }, expression: 'patientId'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.patientTypes, rules: [function () { return t.patientType.length > 0 || 'You must select one' }], label: 'Select Patient Type', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.patientType, callback: function (e) { t.patientType = e }, expression: 'patientType'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.errorTypes, rules: [function () { return t.errorType.length > 0 || 'You must select one' }], label: 'Select an Error Type', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.errorType, callback: function (e) { t.errorType = e }, expression: 'errorType'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.medications, rules: [function () { return t.medication.length > 0 || 'You must select one' }], label: 'Select Medication', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.medication, callback: function (e) { t.medication = e }, expression: 'medication'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Error Description or General Comment'}, model: {value: t.errorComment, callback: function (e) { t.errorComment = e }, expression: 'errorComment'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.workers, rules: [function () { return t.workerAtFault.length > 0 || 'You must select one' }], label: 'Select Person Who Made Error', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.workerAtFault, callback: function (e) { t.workerAtFault = e }, expression: 'workerAtFault'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('h4', [t._v('Was the person notified?')])])], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-radio-group', {attrs: {mandatory: !1, row: 'true'}, model: {value: t.workerNotified, callback: function (e) { t.workerNotified = e }, expression: 'workerNotified'}}, [a('v-radio', {attrs: {label: 'Yes', value: 'true'}}), t._v(' '), a('v-radio', {attrs: {label: 'No', value: 'false'}})], 1)], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.errorLocations, rules: [function () { return t.errorLocation.length > 0 || 'You must select one' }], label: 'Where did the error occur?', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.errorLocation, callback: function (e) { t.errorLocation = e }, expression: 'errorLocation'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('h4', [t._v('Was an IIMS completed?')])])], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-radio-group', {attrs: {row: 'true'}, model: {value: t.iimsCompleted, callback: function (e) { t.iimsCompleted = e }, expression: 'iimsCompleted'}}, [a('v-radio', {attrs: {label: 'Yes', value: 'true'}}), t._v(' '), a('v-radio', {attrs: {label: 'No', value: 'false'}})], 1)], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-select', {attrs: {loading: t.loading, items: t.severityLevels, rules: [function () { return t.severity.length > 0 || 'You must select one' }], label: 'Select Severity Level', autocomplete: '', 'cache-items': '', chips: '', required: ''}, model: {value: t.severity, callback: function (e) { t.severity = e }, expression: 'severity'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('h4', [t._v('Was the physician notified?')])])], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-radio-group', {attrs: {row: 'true'}, model: {value: t.wasPhysicianNotified, callback: function (e) { t.wasPhysicianNotified = e }, expression: 'wasPhysicianNotified'}}, [a('v-radio', {attrs: {label: 'Yes', value: 'true'}}), t._v(' '), a('v-radio', {attrs: {label: 'No', value: 'false'}})], 1)], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician First Name', disabled: this.wasPhysicianNotified == 'false' || this.wasPhysicianNotified == 0}, model: {value: t.physicianFirstName, callback: function (e) { t.physicianFirstName = e }, expression: 'physicianFirstName'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician Surname', disabled: this.wasPhysicianNotified == 'false' || this.wasPhysicianNotified == 0}, model: {value: t.physicianSurname, callback: function (e) { t.physicianSurname = e }, expression: 'physicianSurname'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician Provider Number', disabled: this.wasPhysicianNotified == 'false' || this.wasPhysicianNotified == 0}, model: {value: t.providerNumber, callback: function (e) { t.providerNumber = e }, expression: 'providerNumber'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician Comments', disabled: this.wasPhysicianNotified == 'false' || this.wasPhysicianNotified == 0}, model: {value: t.physicianComment, callback: function (e) { t.physicianComment = e }, expression: 'physicianComment'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Diagnosis', disabled: this.wasPhysicianNotified == 'false' || this.wasPhysicianNotified == 0}, model: {value: t.diagnosis, callback: function (e) { t.diagnosis = e }, expression: 'diagnosis'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-btn', {attrs: {round: '', color: 'primary', dark: '', disabled: !t.valid}, on: {click: t.submit}}, [t._v('Submit\n                ')]), t._v(' '), a('v-btn', {attrs: {round: '', color: 'primary', dark: ''}, on: {click: t.clear}}, [t._v('\n                  clear\n                ')])], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('p', [t._v(t._s(t.message))])])], 1)], 1)], 1)], 1)])])], 1) }, staticRenderFns: []}; var S = a('VU/8')(P, C, !1, function (t) { a('PDdV') }, 'data-v-23d0a0c4', null).exports, O = function (t) { return k().post('/auth/login', t) }, T = {data: function () { return {msg: 'Please Login', e1: !0, email: '', password: '', valid: !0, message: '', errorMessages: [], rules: {required: function (t) { return !!t || 'Required.' }}, error: null, formHasErrors: !1} }, computed: {form: function () { return {email: this.email, password: this.password} }}, watch: {email: function () { this.errorMessages = [] }, password: function () { this.errorMessages = [] }}, methods: {login: function () { var t = this; return y()(h.a.mark(function e () { var a; return h.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0:if (t.error = null, t.formHasErrors) { e.next = 14; break } return e.prev = 2, e.next = 5, O({email: t.email, password: t.password}); case 5:a = e.sent, t.$store.dispatch('setToken', a.data.token), t.$store.dispatch('setUser', a.data.user), t.$router.push({name: 'Error'}), e.next = 14; break; case 11:e.prev = 11, e.t0 = e.catch(2), t.error = e.t0.response.data.error; case 14:case 'end':return e.stop() } }, e, t, [[2, 11]]) }))() }, clear: function () { this.$refs.form.reset() }}}, F = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-layout', {staticClass: 'pt-5 top-margin', attrs: {row: ''}}, [a('v-flex', {attrs: {xs6: '', 'offset-xs3': ''}}, [a('section', {staticClass: 'page-head'}, [a('h1', {staticClass: 'display-1 primary--text', attrs: {id: 'introduction'}}, [t._v('\n        ' + t._s(t.msg) + '\n      ')]), t._v(' '), a('fieldset', {staticClass: 'white'}, [a('v-form', {ref: 'form', attrs: {'lazy-validation': ''}, model: {value: t.valid, callback: function (e) { t.valid = e }, expression: 'valid'}}, [a('v-container', {attrs: {fluid: ''}}, [a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs4: ''}}, [a('v-subheader', [a('b', [t._v('Enter Email')])])], 1), t._v(' '), a('v-flex', {attrs: {xs8: ''}}, [a('v-text-field', {attrs: {name: 'email', label: 'Email', rules: [function () { return !!t.email || 'This field is required' }], 'error-messages': t.errorMessages, required: '', 'single-line': ''}, model: {value: t.email, callback: function (e) { t.email = e }, expression: 'email'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs4: ''}}, [a('v-subheader', [a('b', [t._v('Enter Password')])])], 1), t._v(' '), a('v-flex', {attrs: {xs8: ''}}, [a('v-text-field', {attrs: {name: 'password', label: 'Enter your password', hint: 'At least 8 characters', min: '8', 'append-icon': t.e1 ? 'visibility' : 'visibility_off', 'append-icon-cb': function () { return t.e1 = !t.e1 }, type: t.e1 ? 'password' : 'text', rules: [function () { return !!t.password || 'This field is required' }], 'error-messages': t.errorMessages, required: '', counter: ''}, model: {value: t.password, callback: function (e) { t.password = e }, expression: 'password'}})], 1)], 1)], 1), t._v(' '), a('div', {staticClass: 'text-xs-center'}, [a('v-btn', {attrs: {round: '', color: 'primary', dark: '', disabled: !t.valid}, on: {click: t.login}}, [t._v('Login\n          ')]), t._v(' '), a('v-btn', {attrs: {round: '', color: 'secondary', dark: ''}, on: {click: t.clear}}, [t._v('Clear\n          ')]), t._v(' '), a('v-slide-x-reverse-transition', [t.formHasErrors ? a('v-tooltip', {attrs: {left: ''}}, [a('v-btn', {staticClass: 'my-0', attrs: {slot: 'activator', icon: ''}, on: {click: t.resetForm}, slot: 'activator'}, [a('v-icon', [t._v('refresh')])], 1), t._v(' '), a('span', [t._v('Refresh form')])], 1) : t._e()], 1)], 1), t._v(' '), a('br'), t._v(' '), a('div', {staticClass: 'danger-alert', domProps: {innerHTML: t._s(t.error)}}), t._v(' '), a('br')], 1)], 1)])])], 1) }, staticRenderFns: []}; var M = a('VU/8')(T, F, !1, function (t) { a('adOg') }, 'data-v-389f6eb6', null).exports, I = a('mtWM'), A = {data: function () { return {physicianName: '', providerNo: '', physicianComments: '', valid: !0, message: ''} }, methods: {submit: function () { if (this.validForm()) { this.message = ''; I.post('http://localhost:3000/api/v1/query/physician', {name: this.physicianName, number: this.providerNo, comment: this.physicianComments}).then(function (t) { t.data.status === 200 && (this.message = 'Physician added successfully.', this.clear()) }.bind(this)).catch(function (t) { this.message = 'There was an error adding the Physician: ' + t.stack }.bind(this)) } else this.message = 'There was an error with your form.' }, clear: function () { this.$refs.form.reset() }, validForm: function () { return !0 }}}, E = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-layout', {staticClass: 'pt-5 top-margin', attrs: {row: ''}}, [a('v-flex', {attrs: {xs6: '', 'offset-xs3': ''}}, [a('section', {staticClass: 'page-head'}, [a('h1', {staticClass: 'display-1 primary--text', attrs: {id: 'introduction'}}, [t._v('\n        Physician Details\n      ')]), t._v(' '), a('fieldset', {staticClass: 'white'}, [a('v-form', {ref: 'form', attrs: {'lazy-validation': ''}, model: {value: t.valid, callback: function (e) { t.valid = e }, expression: 'valid'}}, [a('v-container', {attrs: {fluid: ''}}, [a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician Name', rules: [function (t) { return t.length <= 45 || 'Max 45 characters' }], counter: 45}, model: {value: t.physicianName, callback: function (e) { t.physicianName = e }, expression: 'physicianName'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Provider Number', rules: [function (t) { return t.length <= 15 || 'Max 15 characters' }], counter: 15}, model: {value: t.providerNo, callback: function (e) { t.providerNo = e }, expression: 'providerNo'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-text-field', {attrs: {label: 'Physician Comments', rules: [function (t) { return t.length <= 150 || 'Max 150 characters' }], counter: 150}, model: {value: t.physicianComments, callback: function (e) { t.physicianComments = e }, expression: 'physicianComments'}})], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('v-btn', {attrs: {round: '', color: 'primary', dark: '', disabled: !t.valid}, on: {click: t.submit}}, [t._v('Submit\n              ')]), t._v(' '), a('v-btn', {attrs: {round: '', color: 'primary', dark: ''}, on: {click: t.clear}}, [t._v('\n                clear\n              ')])], 1), t._v(' '), a('v-flex', {attrs: {xs4: ''}}, [a('v-btn', {attrs: {to: {name: 'viewPhysician'}, round: '', color: 'primary', dark: ''}}, [t._v('View All\n              ')])], 1)], 1), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('p', [t._v(t._s(t.message))])])], 1)], 1)], 1)], 1)])])], 1) }, staticRenderFns: []}; var q = a('VU/8')(A, E, !1, function (t) { a('/t/+') }, 'data-v-5be54752', null).exports, L = a('mtWM'), D = {data: function () { return {physicians: [], message: ''} }, methods: {loadPhysicians: function () { L.get('http://localhost:3000/api/v1/query/physician').then(function (t) { this.physicians = t.data.response, this.message = '' }.bind(this)) }}, beforeMount: function () { this.message = 'Loading all the Physicians now', this.loadPhysicians() }}, U = {render: function () { var t = this, e = t.$createElement, a = t._self._c || e; return a('v-layout', {staticClass: 'pt-5 top-margin', attrs: {row: ''}}, [a('v-flex', {attrs: {xs6: '', 'offset-xs3': ''}}, [a('section', {staticClass: 'page-head'}, [a('h1', {staticClass: 'display-1 primary--text', attrs: {id: 'introduction'}}, [t._v('\n        Physician Details\n      ')])]), t._v(' '), t._l(t.physicians, function (e) { return a('v-card', {key: e.idPhysician, staticClass: 'white--text top-buffer mb-2', attrs: {color: 'blue-grey darken-2'}}, [a('v-card-title', {attrs: {'primary-title': ''}}, [a('div', {staticClass: 'headline'}, [t._v('Physician Name: ' + t._s(e.physicianName))])]), t._v(' '), a('v-card-text', [a('div', [t._v('Provider Number: ' + t._s(e.providerNumber)), a('br'), t._v('\n            Comment: ' + t._s(e.physicianComment)), a('br')])])], 1) }), t._v(' '), a('v-layout', {attrs: {row: ''}}, [a('v-flex', {attrs: {xs8: '', 'offset-xs2': ''}}, [a('p', [t._v(t._s(t.message))])])], 1)], 2)], 1) }, staticRenderFns: []}; var H = a('VU/8')(D, U, !1, function (t) { a('k8nt') }, 'data-v-4cecb234', null).exports; r.a.use(d.a); var V = new d.a({routes: [{path: '/', redirect: '/main'}, {path: '/main', name: 'Main', component: f}, {path: '/error', name: 'Error', component: S}, {path: '/login', name: 'Login', component: M}, {path: '/physician', name: 'Physician', component: q}, {path: '/physician/view', name: 'viewPhysician', component: H}]}); V.beforeEach(function (t, e, a) { t.name !== 'Login' && w.state.token === null ? a('/login') : a() }); var $ = V, W = a('3EgV'), R = a.n(W), Y = (a('QCv7'), a('9JMe')); r.a.config.productionTip = !1, r.a.use(R.a), Object(Y.sync)(w, $), new r.a({el: '#app', router: $, store: w, components: {App: v}, template: '<App/>'}) }, PDdV: function (t, e) {}, QCv7: function (t, e) {}, VH1H: function (t, e) {}, adOg: function (t, e) {}, igIz: function (t, e, a) { t.exports = a.p + 'static/img/PET-image.e677650.png' }, k8nt: function (t, e) {}, vmfG: function (t, e) {}}, ['NHnr'])
// # sourceMappingURL=app.b317c725d6ea12b62e4e.js.map
